// <auto-generated />
using System;
using CoronaMap.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoronaMap.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210914192203_149")]
    partial class _149
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoronaMap.Data.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("alpha2code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alpha3code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("latitude")
                        .HasColumnType("float");

                    b.Property<double?>("longitude")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CoronaMap.Data.CountryDetails", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("aged_65_older")
                        .HasColumnType("float");

                    b.Property<double?>("aged_70_older")
                        .HasColumnType("float");

                    b.Property<double?>("cardiovasc_death_rate")
                        .HasColumnType("float");

                    b.Property<string>("continent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("diabetes_prevalence")
                        .HasColumnType("float");

                    b.Property<double?>("extreme_poverty")
                        .HasColumnType("float");

                    b.Property<double?>("female_smokers")
                        .HasColumnType("float");

                    b.Property<double?>("gdp_per_capita")
                        .HasColumnType("float");

                    b.Property<double?>("handwashing_facilities")
                        .HasColumnType("float");

                    b.Property<double?>("hosp_patients")
                        .HasColumnType("float");

                    b.Property<double?>("hosp_patients_per_million")
                        .HasColumnType("float");

                    b.Property<double?>("hospital_beds_per_thousand")
                        .HasColumnType("float");

                    b.Property<double?>("human_development_index")
                        .HasColumnType("float");

                    b.Property<double?>("icu_patients")
                        .HasColumnType("float");

                    b.Property<double?>("icu_patients_per_million")
                        .HasColumnType("float");

                    b.Property<string>("iso_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("life_expectancy")
                        .HasColumnType("float");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("male_smokers")
                        .HasColumnType("float");

                    b.Property<double?>("median_age")
                        .HasColumnType("float");

                    b.Property<double?>("new_cases")
                        .HasColumnType("float");

                    b.Property<double?>("new_cases_per_million")
                        .HasColumnType("float");

                    b.Property<double?>("new_cases_smoothed")
                        .HasColumnType("float");

                    b.Property<double?>("new_cases_smoothed_per_million")
                        .HasColumnType("float");

                    b.Property<double?>("new_deaths")
                        .HasColumnType("float");

                    b.Property<double?>("new_deaths_per_million")
                        .HasColumnType("float");

                    b.Property<double?>("new_deaths_smoothed")
                        .HasColumnType("float");

                    b.Property<double?>("new_deaths_smoothed_per_million")
                        .HasColumnType("float");

                    b.Property<double?>("new_tests")
                        .HasColumnType("float");

                    b.Property<double?>("new_tests_per_thousand")
                        .HasColumnType("float");

                    b.Property<double?>("new_tests_smoothed")
                        .HasColumnType("float");

                    b.Property<double?>("new_tests_smoothed_per_thousand")
                        .HasColumnType("float");

                    b.Property<double?>("population")
                        .HasColumnType("float");

                    b.Property<double?>("population_density")
                        .HasColumnType("float");

                    b.Property<double?>("positive_rate")
                        .HasColumnType("float");

                    b.Property<double?>("reproduction_rate")
                        .HasColumnType("float");

                    b.Property<double?>("stringency_index")
                        .HasColumnType("float");

                    b.Property<double?>("tests_per_case")
                        .HasColumnType("float");

                    b.Property<string>("tests_units")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("total_cases")
                        .HasColumnType("float");

                    b.Property<double?>("total_cases_per_million")
                        .HasColumnType("float");

                    b.Property<double?>("total_deaths")
                        .HasColumnType("float");

                    b.Property<double?>("total_deaths_per_million")
                        .HasColumnType("float");

                    b.Property<double?>("total_tests")
                        .HasColumnType("float");

                    b.Property<double?>("total_tests_per_thousand")
                        .HasColumnType("float");

                    b.Property<double?>("total_vaccinations")
                        .HasColumnType("float");

                    b.Property<double?>("total_vaccinations_per_hundred")
                        .HasColumnType("float");

                    b.Property<double?>("weekly_hosp_admissions")
                        .HasColumnType("float");

                    b.Property<double?>("weekly_hosp_admissions_per_million")
                        .HasColumnType("float");

                    b.Property<double?>("weekly_icu_admissions")
                        .HasColumnType("float");

                    b.Property<double?>("weekly_icu_admissions_per_million")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("CountryDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
